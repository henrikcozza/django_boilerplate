version: '3.8'

services:
  nginx:
    restart: always
    image: nginx:1.23-alpine
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/backend/statics
  server:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint: /app/server-entrypoint.sh
    volumes:
      - static_volume:/app/backend/statics
      - ./backend:/app/backend
    expose:
      - 8000
    environment:
        DEBUG: "True"
        CELERY_BROKER_URL: "redis://redis:6379/0"
        CELERY_RESULT_BACKEND: "redis://redis:6379/0"
        DJANGO_DB: postgresql
        POSTGRES_HOST: db 
        POSTGRES_NAME: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_PORT: 5432
  worker:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint: /app/worker-entrypoint.sh
    volumes:
      - static_volume:/app/backend/statics
      - ./backend:/app/backend
    environment:
        DEBUG: "True"
        CELERY_BROKER_URL: "redis://redis:6379/0"
        CELERY_RESULT_BACKEND: "redis://redis:6379/0"
        DJANGO_DB: postgresql
        POSTGRES_HOST: db 
        POSTGRES_NAME: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_PORT: 5432
    depends_on:
      - server
      - redis
  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine
    expose:
      - 6379
  db:
    image: postgres:13.0-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment: 
        POSTGRES_DB: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
    expose:
      - 5432

volumes:
  static_volume: {}
  postgres_data: {}